{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vPro\\\\Desktop\\\\vet360\\\\client\\\\src\\\\components\\\\pages\\\\owners\\\\components\\\\EditPet.jsx\",\n  _s = $RefreshSig$();\nimport './animal.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getPetById, updatePet } from '../../../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditPet() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [pet, setPet] = useState({\n    name: \"\",\n    birthDate: \"\",\n    type: \"\",\n    ownerId: \"\"\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  /*const fetchData = async () => {\r\n      try {\r\n          const response = await getPetById(id);\r\n          const { name, birthDate, type } = response.data;\r\n          setPet({ name, birthDate, type });\r\n      } catch (error) {\r\n          console.error(\"Error while fetching data:\", error);\r\n      } finally {\r\n          setLoading(false);\r\n      }\r\n  };*/\n\n  // Inside EditPet.jsx\n  /*const fetchData = async () => {\r\n      try {\r\n          setLoading(true); // Set loading true at the start\r\n          const response = await getPetById(id);\r\n          // Assuming the backend response includes the owner object with _id\r\n          // Adjust based on your actual API response structure from getPetById\r\n          const { name, birthDate, type, owner } = response.data.pet;\r\n          // Store ownerId in the state\r\n          setPet({ name, birthDate, type, ownerId: owner._id });\r\n      } catch (error) {\r\n          console.error(\"Error while fetching pet data:\", error);\r\n          setError(\"Failed to load pet information.\"); // Set an error message\r\n      } finally {\r\n          setLoading(false);\r\n      }\r\n  };*/\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPet({\n      ...pet,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!pet.name.trim() || !pet.birthDate.trim() || !pet.type.trim()) {\n      setError(\"All fields are required\");\n      return;\n    }\n    setError(null);\n\n    /*try {\r\n        const response = await updatePet(id, pet);\r\n        if (response.status === 201) {\r\n            console.log(\"Pet updated successfully.\");\r\n            navigate(`/owners/${pet.ownerId}`);\r\n          }\r\n    } catch (err) {\r\n        console.error(\"Error updating pet:\", err);\r\n    } finally {\r\n        setLoading(false);\r\n    }*/\n    try {\n      setLoading(true); // Set loading before API call\n      const response = await updatePet(id, pet); // API call\n      // ***Check the actual success status code from your API***\n      // Updates usually return 200 OK, not 201 Created. Let's assume 200.\n      if (response.status === 200) {\n        // Changed from 201 to 200\n        console.log(\"Pet updated successfully.\");\n        // ***Ensure pet.ownerId has a value here***\n        if (pet.ownerId) {\n          navigate(`/owners/${pet.ownerId}`); // Use ownerId for navigation\n        } else {\n          console.error(\"Owner ID not found, cannot navigate back.\");\n          setError(\"Update successful, but could not navigate back to owner page.\");\n          // Optionally navigate to a default page like '/owners'\n          // navigate('/owners');\n        }\n      } else {\n        // Handle cases where API call succeeds but doesn't indicate logical success\n        console.error(\"Update Pet failed with status:\", response.status);\n        setError(`Failed to update pet. Server responded with status: ${response.status}`);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error updating pet:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"An error occurred while updating the pet.\"); // Improved error message\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Pet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"input-name\",\n        name: \"name\",\n        value: pet.name,\n        onChange: handleChange,\n        className: \"form-control col-8 ml-0 text-hover-costem\",\n        placeholder: \"Pet Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Birth Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"input-birthday\",\n        name: \"birthDate\",\n        value: pet.birthDate,\n        onChange: handleChange,\n        className: \"form-control col-8 ml-0 text-hover-costem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select form-control\",\n        id: \"input-type\",\n        name: \"type\",\n        value: pet.type,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dog\",\n          children: \"Dog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cat\",\n          children: \"Cat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bird\",\n          children: \"Bird\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-fowner\",\n        disabled: loading,\n        children: loading ? \"Updating...\" : \"Update Pet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(EditPet, \"lM4EkUYkl4EfwgChw7xJxbav67g=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPet;\nvar _c;\n$RefreshReg$(_c, \"EditPet\");","map":{"version":3,"names":["useNavigate","useParams","useEffect","useState","getPetById","updatePet","jsxDEV","_jsxDEV","EditPet","_s","id","navigate","error","setError","loading","setLoading","pet","setPet","name","birthDate","type","ownerId","fetchData","handleChange","e","value","target","handleSubmit","preventDefault","trim","response","status","console","log","err","_err$response","_err$response$data","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/vPro/Desktop/vet360/client/src/components/pages/owners/components/EditPet.jsx"],"sourcesContent":["import './animal.css';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { getPetById, updatePet } from '../../../../services/api';\r\n\r\nexport default function EditPet() {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [pet, setPet] = useState({\r\n        name: \"\",\r\n        birthDate: \"\",\r\n        type: \"\",\r\n        ownerId: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    /*const fetchData = async () => {\r\n        try {\r\n            const response = await getPetById(id);\r\n            const { name, birthDate, type } = response.data;\r\n            setPet({ name, birthDate, type });\r\n        } catch (error) {\r\n            console.error(\"Error while fetching data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };*/\r\n\r\n    // Inside EditPet.jsx\r\n/*const fetchData = async () => {\r\n    try {\r\n        setLoading(true); // Set loading true at the start\r\n        const response = await getPetById(id);\r\n        // Assuming the backend response includes the owner object with _id\r\n        // Adjust based on your actual API response structure from getPetById\r\n        const { name, birthDate, type, owner } = response.data.pet;\r\n        // Store ownerId in the state\r\n        setPet({ name, birthDate, type, ownerId: owner._id });\r\n    } catch (error) {\r\n        console.error(\"Error while fetching pet data:\", error);\r\n        setError(\"Failed to load pet information.\"); // Set an error message\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n};*/\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPet({ ...pet, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!pet.name.trim() || !pet.birthDate.trim() || !pet.type.trim()) {\r\n            setError(\"All fields are required\");\r\n            return;\r\n        }\r\n\r\n        setError(null);\r\n\r\n        /*try {\r\n            const response = await updatePet(id, pet);\r\n            if (response.status === 201) {\r\n                console.log(\"Pet updated successfully.\");\r\n                navigate(`/owners/${pet.ownerId}`);\r\n\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error updating pet:\", err);\r\n        } finally {\r\n            setLoading(false);\r\n        }*/\r\n        try {\r\n            setLoading(true); // Set loading before API call\r\n            const response = await updatePet(id, pet); // API call\r\n            // ***Check the actual success status code from your API***\r\n            // Updates usually return 200 OK, not 201 Created. Let's assume 200.\r\n            if (response.status === 200) { // Changed from 201 to 200\r\n                console.log(\"Pet updated successfully.\");\r\n                // ***Ensure pet.ownerId has a value here***\r\n                if (pet.ownerId) {\r\n                    navigate(`/owners/${pet.ownerId}`); // Use ownerId for navigation\r\n                } else {\r\n                    console.error(\"Owner ID not found, cannot navigate back.\");\r\n                    setError(\"Update successful, but could not navigate back to owner page.\");\r\n                    // Optionally navigate to a default page like '/owners'\r\n                    // navigate('/owners');\r\n                }\r\n            } else {\r\n                // Handle cases where API call succeeds but doesn't indicate logical success\r\n                console.error(\"Update Pet failed with status:\", response.status);\r\n                setError(`Failed to update pet. Server responded with status: ${response.status}`);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error updating pet:\", err);\r\n            setError(err.response?.data?.message || \"An error occurred while updating the pet.\"); // Improved error message\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Edit Pet</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"input-name\"\r\n                    name=\"name\"\r\n                    value={pet.name}\r\n                    onChange={handleChange}\r\n                    className=\"form-control col-8 ml-0 text-hover-costem\"\r\n                    placeholder=\"Pet Name\"\r\n                />\r\n                <label>Birth Date:</label>\r\n                <input\r\n                    type=\"date\"\r\n                    id=\"input-birthday\"\r\n                    name=\"birthDate\"\r\n                    value={pet.birthDate}\r\n                    onChange={handleChange}\r\n                    className=\"form-control col-8 ml-0 text-hover-costem\"\r\n                />\r\n                <label>Type:</label>\r\n                <select\r\n                    className=\"form-select form-control\"\r\n                    id=\"input-type\"\r\n                    name=\"type\"\r\n                    value={pet.type}\r\n                    onChange={handleChange}\r\n                >\r\n                    <option value=\"\"></option>\r\n                    <option value=\"dog\">Dog</option>\r\n                    <option value=\"cat\">Cat</option>\r\n                    <option value=\"bird\">Bird</option>\r\n                </select>\r\n                {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                <button type=\"submit\" className=\"btn-fowner\" disabled={loading}>\r\n                    {loading ? \"Updating...\" : \"Update Pet\"}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}